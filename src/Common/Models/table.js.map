{"version":3,"sources":["table.es6"],"names":[],"mappings":"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","file":"table.js","sourcesContent":["let response = require(\"./response\");\r\nlet tableMap = require(\"./tableMap\");\r\n\r\nmodule.exports = {\r\n    init: (req, res, table, map)=> {\r\n        let d = tableMap.init(table);\r\n        if (d.length == 0) {\r\n            response.fail(res, \"unknown table\");\r\n        } else {\r\n            response.success(res, d);\r\n        }\r\n    },\r\n    create: (req, res, table, map)=> {\r\n        let {sqlCommand, values} = map;\r\n        global.mysql.excuteQuery(sqlCommand, values).then(d=> {\r\n            response.success(res);\r\n        }).catch(d=> {\r\n            console.log(\"mysql excuteQuery error:\" + d);\r\n            console.log(sqlCommand);\r\n            console.log(values);\r\n            response.fail(res, \"mysql excuteQuery error\");\r\n        });\r\n    },\r\n    update: (req, res, table, map)=> {\r\n        let [sqlCommandArr, valuesArr] = [map.sqlCommand, map.values];\r\n        let promiseArr = [];\r\n        for (let i = 0; i < sqlCommandArr.length; i++) {\r\n            let sqlCommand = sqlCommandArr[i];\r\n            let values = valuesArr[i];\r\n            promiseArr.push(global.mysql.excuteQuery(sqlCommand, values));\r\n        }\r\n        Promise.all(promiseArr).then(d=> {\r\n            response.success(res);\r\n        }).catch(d=> {\r\n            console.log(\"mysql excuteQuery error:\" + d);\r\n            console.log(sqlCommandArr);\r\n            console.log(valuesArr);\r\n            response.fail(res, \"mysql excuteQuery error\");\r\n        });\r\n    },\r\n    read: (req, res, table, map)=> {\r\n        let {sqlCommand, values} = map;\r\n        global.mysql.excuteQuery(sqlCommand, values).then(d=> {\r\n            d = tableMap.dataMap(table, d);\r\n            response.success(res, d);\r\n        }).catch(d=> {\r\n            console.log(\"mysql excuteQuery error:\" + d);\r\n            console.log(sqlCommand);\r\n            console.log(values);\r\n            response.fail(res, \"mysql excuteQuery error\");\r\n        });\r\n    },\r\n    delete: (req, res, table, map)=> {\r\n        let sqlCommand = \"delete from \" + table + \" where id in (\" + req.body.id + \")\";\r\n        global.mysql.excuteQuery(sqlCommand, {}).then(d=> {\r\n            response.success(res, d);\r\n        }).catch(d=> {\r\n            console.log(\"mysql excuteQuery error:\" + d);\r\n            console.log(sqlCommand);\r\n            response.fail(res, \"mysql excuteQuery error\");\r\n        });\r\n    }\r\n};"]}