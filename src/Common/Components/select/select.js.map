{"version":3,"sources":["select.jsx"],"names":[],"mappings":"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","file":"select.js","sourcesContent":["let http = require(\"./http\");\r\nlet React = require(\"react\");\r\n\r\nclass select extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            panelShow: false,\r\n            data: [],\r\n            allChecked: false\r\n        };\r\n        let bindArr = [\"selectBlur\", \"panelToggle\", \"setData\", \"check\", \"allCheck\"];\r\n        bindArr.forEach(d=> {\r\n            this[d] = this[d].bind(this);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = this.setData(this.props.data);\r\n        this.setState({data: data});\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        let data = this.setData(nextProps.data);\r\n        this.setState({data: data});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"react-select\" tabIndex=\"0\" onBlur={this.selectBlur}>\r\n                <div className=\"input\" onClick={this.panelToggle}>\r\n                    {this.props.text}<i className=\"fa fa-caret-down\"></i>\r\n                </div>\r\n                <div className=\"panel\" style={(this.state.panelShow) ? {} : {display: \"none\"}}>\r\n                    <div className=\"allCheck\">\r\n                        <input type=\"checkbox\" onChange={(e)=> {\r\n                            this.allCheck(e);\r\n                        }} checked={this.state.allChecked}/><label>全选</label>\r\n                    </div>\r\n                    <div className=\"options\">\r\n                        {\r\n                            this.state.data.map((d, i)=> {\r\n                                return <div key={i} className=\"column\">\r\n                                    {\r\n                                        d.map((d1, j)=> {\r\n                                            return <div className=\"option\" key={j}>\r\n                                                <input type=\"checkbox\" onChange={(e)=> {\r\n                                                    this.check(e, d1.id);\r\n                                                }} checked={d1.checked}/><label>{d1.name}</label>\r\n                                            </div>;\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    selectBlur(e) {\r\n        if (e.target.className == \"react-select\") {\r\n            let child = e.relatedTarget;\r\n            if (child != null) {\r\n                let child1 = child.parentNode.parentNode.parentNode.parentNode.parentNode;\r\n                let child2 = child.parentNode.parentNode.parentNode;\r\n                if (child1 != e.target && child2 != e.target) {\r\n                    this.setState({\r\n                        panelShow: false\r\n                    });\r\n                }\r\n            } else {\r\n                this.setState({\r\n                    panelShow: false\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    panelToggle() {\r\n        this.setState({\r\n            panelShow: !this.state.panelShow\r\n        });\r\n    }\r\n\r\n    setData(d) {\r\n        let columnDataArr = [];\r\n        for (let i = 0; i < d.length; i = i + 10) {\r\n            let end = (i + 10) > d.length ? d.length : i + 10;\r\n            let columnData = d.slice(i, end);\r\n            columnDataArr.push(columnData);\r\n        }\r\n        return columnDataArr;\r\n    }\r\n\r\n    check(e, id) {\r\n        e.target.parentNode.parentNode.parentNode.parentNode.parentNode.focus();\r\n        let data = this.state.data.map(d=> {\r\n            d = d.map(d1=> {\r\n                if (d1.id == id) {\r\n                    d1.checked = !d1.checked;\r\n                }\r\n                return d1;\r\n            });\r\n            return d;\r\n        });\r\n        this.setState({\r\n            data: data\r\n        });\r\n        if (this.props.callback) {\r\n            let sourceData = [];\r\n            this.state.data.forEach(d=> {\r\n                d.forEach(d1=> {\r\n                    sourceData.push(d1);\r\n                });\r\n            });\r\n            this.props.callback(sourceData);\r\n        }\r\n    }\r\n\r\n    allCheck(e) {\r\n        e.target.parentNode.parentNode.parentNode.focus();\r\n        let isAllChecked = !this.state.allChecked;\r\n        let data = this.state.data.map(d=> {\r\n            d.map(d1=> {\r\n                d1.checked = isAllChecked;\r\n            });\r\n            return d;\r\n        });\r\n        this.setState({\r\n            allChecked: isAllChecked,\r\n            data: data\r\n        });\r\n        if (this.props.callback) {\r\n            let sourceData = [];\r\n            this.state.data.forEach(d=> {\r\n                d.forEach(d1=> {\r\n                    sourceData.push(d1);\r\n                });\r\n            });\r\n            this.props.callback(sourceData);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = select;"]}