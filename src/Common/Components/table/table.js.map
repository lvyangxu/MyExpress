{"version":3,"sources":["table.jsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAI,OAAO,QAAQ,QAAR,CAAX;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,SAAS,QAAQ,UAAR,CAAb;;IAEM,K;;;AACF,mBAAY,KAAZ,EAAmB;AAAA;;AAAA,kHACT,KADS;;AAEf,cAAK,KAAL,GAAa;AACT,qBAAS,EADA;AAET,wBAAY,EAFH;AAGT,wBAAY,EAHH;AAIT,yBAAa,EAJJ;AAKT,4BAAgB,EALP;AAMT,yBAAa;AANJ,SAAb;AAQA,YAAI,UAAU,CAAC,sBAAD,EAAyB,iBAAzB,EAA4C,YAA5C,CAAd;AACA,gBAAQ,OAAR,CAAgB,aAAI;AAChB,kBAAK,CAAL,IAAU,MAAK,CAAL,EAAQ,IAAR,OAAV;AACH,SAFD;AAXe;AAclB;;;;4CAEmB;AAAA;;AAChB,gBAAI,UAAU,KAAK,KAAL,CAAW,OAAzB;AACA,gBAAI,OAAJ,EAAa;AACT,oBAAI,cAAc,KAAK,IAAL,CAAU,cAAc,OAAd,GAAwB,OAAlC,CAAlB;AACA,oBAAI,cAAc,KAAK,IAAL,CAAU,cAAc,OAAd,GAAwB,OAAlC,CAAlB;AACA,wBAAQ,GAAR,CAAY,CAAC,WAAD,EAAc,WAAd,CAAZ,EAAwC,IAAxC,CAA6C,aAAI;AAC7C,2BAAK,QAAL,CAAc;AACV,iCAAS,EAAE,CAAF,CADC;AAEV,oCAAY,EAAE,CAAF,CAFF;AAGV,oCAAY,EAAE,CAAF,CAHF;AAIV,qCAAa,EAAE,CAAF;AAJH,qBAAd;AAMH,iBAPD,EAOG,KAPH,CAOS,aAAI;AACT,4BAAQ,GAAR,CAAY,uBAAuB,CAAnC;AACH,iBATD;AAUH;AACJ;;;kDAEyB,S,EAAW;AACjC,gBAAI,KAAK,KAAL,CAAW,cAAX,IAA6B,UAAU,cAA3C,EAA2D;AACvD,qBAAK,eAAL,CAAqB,EAAC,QAAQ,EAAC,OAAO,UAAU,cAAlB,EAAT,EAArB;AACA,qBAAK,QAAL,CAAc;AACV,oCAAgB,UAAU;AADhB,iBAAd;AAGH;AACJ;;;iCAEQ;AAAA;;AACL,mBACI;AAAA;gBAAA,EAAK,WAAU,aAAf;gBACI;AAAA;oBAAA,EAAK,WAAU,YAAf;oBACI;AAAA;wBAAA,EAAK,WAAU,eAAf;wBACI,oBAAC,MAAD,IAAQ,MAAM,KAAK,KAAL,CAAW,OAAzB,EAAkC,MAAK,KAAvC,EAA6C,UAAU,KAAK,oBAA5D;AACQ,gDAAoB,CAD5B;AADJ,qBADJ;oBAKI;AAAA;wBAAA,EAAK,WAAU,YAAf;wBACI,+BAAO,UAAU,KAAK,eAAtB,EAAuC,aAAY,KAAnD;AACO,mCAAO,KAAK,KAAL,CAAW,cADzB;AADJ,qBALJ;oBASI;AAAA;wBAAA,EAAK,WAAU,cAAf;wBAEQ,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,CAA0B,aAAI;AAC1B,mCAAO,EAAE,KAAT;AACH,yBAFD,EAEG,GAFH,CAEO,aAAI;AACP,gCAAI,cAAc,EAAlB;AACA,mCAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB,CAA8B,cAAK;AAC/B,oCAAI,CAAC,YAAY,QAAZ,CAAqB,GAAG,EAAE,EAAL,CAArB,CAAL,EAAqC;AACjC,gDAAY,IAAZ,CAAiB,GAAG,EAAE,EAAL,CAAjB;AACH;AACJ,6BAJD;AAKA,gCAAI,SAAS;AAAA;gCAAA,EAAQ,KAAK,EAAE,EAAf,EAAmB,UAAU,kBAAC,CAAD,EAAM;AAC5C,+CAAK,iBAAL,CAAuB,CAAvB,EAA0B,CAA1B;AACH,qCAFY;gCAGT;AAAA;oCAAA;oCAAS,EAAE;AAAX,iCAHS;gCAIR,YAAY,GAAZ,CAAgB,cAAK;AAClB,2CAAO;AAAA;wCAAA,EAAQ,KAAK,EAAb;wCAAkB;AAAlB,qCAAP;AACH,iCAFA;AAJQ,6BAAb;AAOA,mCAAO,MAAP;AACH,yBAjBD;AAFR,qBATJ;oBA+BI;AAAA;wBAAA,EAAK,WAAU,SAAf;wBACI;AAAA;4BAAA,EAAQ,SAAS,mBAAK;AAClB,2CAAK,OAAL;AACH,iCAFD;4BAEG,2BAAG,WAAU,eAAb,GAFH;4BAAA;AAAA;AADJ;AA/BJ,iBADJ;gBAuCI;AAAA;oBAAA,EAAK,WAAU,YAAf;oBACI;AAAA;wBAAA;wBACI;AAAA;4BAAA;4BACA;AAAA;gCAAA;gCAEQ,KAAK,KAAL,CAAW,OAAX,CAAmB,GAAnB,CAAuB,aAAI;AACvB,2CAAO;AAAA;wCAAA,EAAI,KAAK,EAAE,EAAX,EAAe,iBAAe,EAAE,EAAhC;AACI,uDAAW,EAAE,OAAF,GAAY,EAAZ,GAAiB,MADhC;wCACyC,EAAE;AAD3C,qCAAP;AAEH,iCAHD;AAFR;AADA,yBADJ;wBAWI;AAAA;4BAAA;4BAEI,KAAK,KAAL,CAAW,WAAX,CAAuB,GAAvB,CAA2B,UAAC,CAAD,EAAI,CAAJ,EAAS;AAChC,uCAAO;AAAA;oCAAA,EAAI,KAAK,CAAT;oCACH,OAAK,KAAL,CAAW,OAAX,CAAmB,GAAnB,CAAuB,cAAK;AACxB,4CAAI,SAAS,EAAE,GAAG,EAAL,CAAb;AACA,4CAAI,MAAJ,EAAY;AACR,qDAAS,OAAO,QAAP,GAAkB,OAAlB,CAA0B,KAA1B,EAAiC,OAAjC,CAAT;AACH;AACD,4CAAI,OAAK,KAAL,CAAW,GAAG,EAAH,GAAQ,YAAnB,KAAoC,SAAxC,EAAmD;AAC/C,mDAAO,4BAAI,MAAM,EAAE,GAAG,EAAL,CAAV,EAAoB,KAAK,GAAG,EAA5B;AACI,iEAAe,GAAG,EADtB;AAEI,2DAAW,GAAG,OAAH,GAAa,EAAb,GAAkB,MAFjC;AAGI,yDAAS,mBAAK;AACV,2DAAK,UAAL,CAAgB,GAAG,EAAnB,EAAuB,EAAE,GAAG,EAAL,CAAvB;AACH,iDALL;AAMI,yEAAyB,EAAC,QAAQ,MAAT,EAN7B,GAAP;AAOH,yCARD,MAQO;AACH,mDAAO,4BAAI,MAAM,EAAE,GAAG,EAAL,CAAV,EAAoB,KAAK,GAAG,EAA5B;AACI,iEAAe,GAAG,EADtB;AAEI,2DAAW,GAAG,OAAH,GAAa,EAAb,GAAkB,MAFjC;AAGI,yEAAyB,EAAC,QAAQ,MAAT,EAH7B,GAAP;AAIH;AACJ,qCAnBD;AADG,iCAAP;AAsBH,6BAvBD;AAFJ;AAXJ;AADJ;AAvCJ,aADJ;AAoFH;;;6CAEoB,O,EAAS;AAC1B,iBAAK,QAAL,CAAc,EAAC,SAAS,OAAV,EAAd;AACH;;;wCAEe,C,EAAG;AACf,gBAAI,aAAa,EAAE,MAAF,CAAS,KAA1B;AACA,gBAAI,aAAa,KAAK,KAAL,CAAW,UAAX,CAAsB,MAAtB,CAA6B,aAAI;AAC9C,oBAAI,SAAS,KAAb;AACA,qBAAK,IAAI,CAAT,IAAc,CAAd,EAAiB;AACb,wBAAI,EAAE,CAAF,KAAQ,IAAR,IAAgB,EAAE,CAAF,EAAK,QAAL,GAAgB,WAAhB,GAA8B,QAA9B,CAAuC,WAAW,WAAX,EAAvC,CAApB,EAAsF;AAClF,iCAAS,IAAT;AACA;AACH;AACJ;AACD,uBAAO,MAAP;AACH,aATgB,CAAjB;AAUA,iBAAK,QAAL,CAAc;AACV,4BAAY,UADF;AAEV,6BAAa,UAFH;AAGV,gCAAgB;AAHN,aAAd;AAKH;;;kCAES;AAAA;;AACN,gBAAI,UAAU,KAAK,KAAL,CAAW,OAAzB;AACA,iBAAK,IAAL,CAAU,cAAc,OAAd,GAAwB,OAAlC,EAA2C,IAA3C,CAAgD,aAAI;AAChD,oBAAI,EAAE,GAAF,CAAM,cAAK;AACX,uBAAG,eAAH,GAAqB,KAArB;AACA,2BAAO,EAAP;AACH,iBAHG,CAAJ;AAIA,uBAAK,QAAL,CAAc;AACV,gCAAY,CADF;AAEV,gCAAY,CAFF;AAGV,iCAAa,CAHH;AAIV,oCAAgB,EAJN;AAKV,iCAAa;AALH,iBAAd;AAOH,aAZD,EAYG,KAZH,CAYS,aAAI;AACT,sBAAM,YAAY,CAAlB;AACH,aAdD;AAeH;;;0CAEiB,C,EAAG,C,EAAG;AACpB,gBAAI,aAAc,EAAE,MAAF,CAAS,KAAT,IAAkB,EAAE,IAArB,GAA6B,KAAK,KAAL,CAAW,UAAxC,GAAqD,KAAK,KAAL,CAAW,UAAX,CAAsB,MAAtB,CAA6B,cAAK;AACpG,qBAAK,GAAG,EAAE,EAAL,CAAL;AACA,qBAAM,MAAM,IAAP,GAAe,EAAf,GAAoB,GAAG,QAAH,EAAzB;AACA,uBAAO,MAAM,EAAE,MAAF,CAAS,KAAtB;AACH,aAJqE,CAAtE;AAKA,iBAAK,QAAL,CAAc;AACV,4BAAY,UADF;AAEV,6BAAa;AAFH,aAAd;AAIH;;;mCAEU,E,EAAI,K,EAAO;AAClB,iBAAK,KAAL,CAAW,KAAK,YAAhB,EAA8B,KAA9B;AACH;;;;EA3Le,MAAM,S;;AA8L1B,OAAO,OAAP,GAAiB,KAAjB","file":"table.js","sourcesContent":["let http = require(\"./http\");\r\nlet React = require(\"react\");\r\nlet Select = require(\"./select\");\r\n\r\nclass table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [],\r\n            sourceData: [],\r\n            filterData: [],\r\n            displayData: [],\r\n            rowFilterValue: \"\",\r\n            rowAllCheck: false\r\n        };\r\n        let bindArr = [\"columnFilterCallback\", \"rowFilterChange\", \"tdCallback\"];\r\n        bindArr.forEach(d=> {\r\n            this[d] = this[d].bind(this);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let tableId = this.props.tableId;\r\n        if (tableId) {\r\n            let promiseInit = http.post(\"../table/\" + tableId + \"/init\");\r\n            let promiseRead = http.post(\"../table/\" + tableId + \"/read\");\r\n            Promise.all([promiseInit, promiseRead]).then(d=> {\r\n                this.setState({\r\n                    columns: d[0],\r\n                    sourceData: d[1],\r\n                    filterData: d[1],\r\n                    displayData: d[1]\r\n                });\r\n            }).catch(d=> {\r\n                console.log(\"init table failed:\" + d);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.rowFilterValue != nextProps.rowFilterValue) {\r\n            this.rowFilterChange({target: {value: nextProps.rowFilterValue}});\r\n            this.setState({\r\n                rowFilterValue: nextProps.rowFilterValue\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"react-table\">\r\n                <div className=\"table-head\">\r\n                    <div className=\"column-filter\">\r\n                        <Select data={this.state.columns} text=\"列过滤\" callback={this.columnFilterCallback}\r\n                                optionNumPerColumn={5}/>\r\n                    </div>\r\n                    <div className=\"row-filter\">\r\n                        <input onChange={this.rowFilterChange} placeholder=\"行过滤\"\r\n                               value={this.state.rowFilterValue}/>\r\n                    </div>\r\n                    <div className=\"radio-filter\">\r\n                        {\r\n                            this.state.columns.filter(d=> {\r\n                                return d.radio;\r\n                            }).map(d=> {\r\n                                let radioValues = [];\r\n                                this.state.sourceData.forEach(d1=> {\r\n                                    if (!radioValues.includes(d1[d.id])) {\r\n                                        radioValues.push(d1[d.id]);\r\n                                    }\r\n                                });\r\n                                let select = <select key={d.id} onChange={(e)=> {\r\n                                    this.radioFilterChange(e, d);\r\n                                }}>\r\n                                    <option>{d.name}</option>\r\n                                    {radioValues.map(d1=> {\r\n                                        return <option key={d1}>{d1}</option>;\r\n                                    })}</select>;\r\n                                return select;\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"refresh\">\r\n                        <button onClick={()=> {\r\n                            this.refresh();\r\n                        }}><i className=\"fa fa-refresh\"></i>刷新数据\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-body\">\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            {\r\n                                this.state.columns.map(d=> {\r\n                                    return <th key={d.id} data-columnId={d.id}\r\n                                               className={d.checked ? \"\" : \"hide\"}>{d.name}</th>\r\n                                })\r\n                            }\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.state.displayData.map((d, i)=> {\r\n                                return <tr key={i}>{\r\n                                    this.state.columns.map(d1=> {\r\n                                        let tdHtml = d[d1.id];\r\n                                        if (tdHtml) {\r\n                                            tdHtml = tdHtml.toString().replace(/\\n/g, \"<br/>\");\r\n                                        }\r\n                                        if (this.props[d1.id + \"TdCallback\"] != undefined) {\r\n                                            return <td data={d[d1.id]} key={d1.id}\r\n                                                       data-columnId={d1.id}\r\n                                                       className={d1.checked ? \"\" : \"hide\"}\r\n                                                       onClick={()=> {\r\n                                                           this.tdCallback(d1.id, d[d1.id])\r\n                                                       }}\r\n                                                       dangerouslySetInnerHTML={{__html: tdHtml}}></td>\r\n                                        } else {\r\n                                            return <td data={d[d1.id]} key={d1.id}\r\n                                                       data-columnId={d1.id}\r\n                                                       className={d1.checked ? \"\" : \"hide\"}\r\n                                                       dangerouslySetInnerHTML={{__html: tdHtml}}></td>\r\n                                        }\r\n                                    })\r\n                                }</tr>\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    columnFilterCallback(columns) {\r\n        this.setState({columns: columns});\r\n    }\r\n\r\n    rowFilterChange(e) {\r\n        let matchValue = e.target.value;\r\n        let filterData = this.state.sourceData.filter(d=> {\r\n            let isFind = false;\r\n            for (let k in d) {\r\n                if (d[k] != null && d[k].toString().toLowerCase().includes(matchValue.toLowerCase())) {\r\n                    isFind = true;\r\n                    break;\r\n                }\r\n            }\r\n            return isFind;\r\n        });\r\n        this.setState({\r\n            filterData: filterData,\r\n            displayData: filterData,\r\n            rowFilterValue: matchValue\r\n        });\r\n    }\r\n\r\n    refresh() {\r\n        let tableId = this.props.tableId;\r\n        http.post(\"../table/\" + tableId + \"/read\").then(d=> {\r\n            d = d.map(d1=> {\r\n                d1.checkboxChecked = false;\r\n                return d1;\r\n            });\r\n            this.setState({\r\n                sourceData: d,\r\n                filterData: d,\r\n                displayData: d,\r\n                rowFilterValue: \"\",\r\n                rowAllCheck: false\r\n            });\r\n        }).catch(d=> {\r\n            alert(\"刷新数据失败:\" + d);\r\n        });\r\n    }\r\n\r\n    radioFilterChange(e, d) {\r\n        let filterData = (e.target.value == d.name) ? this.state.sourceData : this.state.sourceData.filter(d1=> {\r\n            d1 = d1[d.id];\r\n            d1 = (d1 == null) ? \"\" : d1.toString();\r\n            return d1 == e.target.value;\r\n        });\r\n        this.setState({\r\n            filterData: filterData,\r\n            displayData: filterData\r\n        });\r\n    }\r\n\r\n    tdCallback(id, value) {\r\n        this.props[id + \"TdCallback\"](value);\r\n    }\r\n}\r\n\r\nmodule.exports = table;"]}