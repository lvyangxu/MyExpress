{"version":3,"sources":["table.jsx"],"names":[],"mappings":"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","file":"table.js","sourcesContent":["let http = require(\"karl-http\");\r\nlet React = require(\"react\");\r\nlet Select = require(\"./select\");\r\nlet upload = require(\"./upload\");\r\n\r\nclass table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            curd: (this.props.curd == undefined) ? \"r\" : this.props.curd,\r\n            panel: \"main\",\r\n            columns: [],\r\n            sourceData: [],\r\n            filterData: [],\r\n            displayData: [],\r\n            rowFilterValue: \"\",\r\n            rowAllChecked: false,\r\n            sortDesc: true,\r\n            sortColumnId: \"\",\r\n            createLineNum: 5,\r\n            ct: [],\r\n            ut: [],\r\n            attachmentList: [],\r\n            attachmentProgress: \"0%\",\r\n            loading: false,\r\n            selectFilter: [],\r\n            createReferTableData: []\r\n        };\r\n        let bindArr = [\"columnFilterCallback\", \"rowFilterChange\", \"refresh\", \"radioFilterChange\", \"tdCallback\", \"sort\", \"rowAllCheck\",\r\n            \"rowCheck\", \"backToMain\", \"create\", \"createSubmit\", \"createTdChange\", \"update\", \"updateSubmit\", \"updateTdChange\", \"delete\"];\r\n        bindArr.forEach(d=> {\r\n            this[d] = this[d].bind(this);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let tableId = this.props.tableId;\r\n        if (tableId) {\r\n            let promiseInit = http.post(\"../table/\" + tableId + \"/init\");\r\n            let promiseRead = http.post(\"../table/\" + tableId + \"/read\");\r\n            Promise.all([promiseInit, promiseRead]).then(d=> {\r\n                d[1] = d[1].map(d1=> {\r\n                    d1.checkboxChecked = false;\r\n                    return d1;\r\n                });\r\n                let ct = [];\r\n                for (let i = 0; i < this.state.createLineNum; i++) {\r\n                    let ctRow = {};\r\n                    d[0].forEach(d1=> {\r\n                        ctRow[d1.id] = \"\";\r\n                    });\r\n                    ct.push(ctRow);\r\n                }\r\n                let selectFilter = d[0].filter(d1=> {\r\n                    return d1.select;\r\n                }).map(d1=> {\r\n                    let values = [];\r\n                    let data = [];\r\n                    d[1].forEach((d2, j)=> {\r\n                        if (!values.includes(d2[d1.id])) {\r\n                            values.push(d2[d1.id]);\r\n                            data.push({id: j, name: d2[d1.id], checked: true});\r\n                        }\r\n                    });\r\n                    return {id: d1.id, name: d1.name, data: data};\r\n                });\r\n\r\n                this.setState({\r\n                    columns: d[0],\r\n                    sourceData: d[1],\r\n                    filterData: d[1],\r\n                    displayData: d[1],\r\n                    ct: ct,\r\n                    selectFilter: selectFilter\r\n                });\r\n            }).catch(d=> {\r\n                console.log(\"init table failed:\" + d);\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.rowFilterValue != nextProps.rowFilterValue) {\r\n            this.rowFilterChange({target: {value: nextProps.rowFilterValue}});\r\n            this.setState({\r\n                rowFilterValue: nextProps.rowFilterValue\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"react-table\">\r\n                <div style={this.state.panel == \"main\" ? {} : {display: \"none\"}}>\r\n                    <div className=\"table-head\">\r\n                        <div className=\"column-filter\">\r\n                            <Select data={this.state.columns} text=\"列过滤\" callback={this.columnFilterCallback}\r\n                                    optionNumPerColumn={5}/>\r\n                        </div>\r\n                        <div className=\"row-filter\">\r\n                            <input onChange={this.rowFilterChange} placeholder=\"行过滤\"\r\n                                   value={this.state.rowFilterValue}/>\r\n                        </div>\r\n                        <div className=\"create\"\r\n                             style={this.state.curd.includes(\"c\") ? {marginLeft: \"20px\"} : {display: \"none\"}}>\r\n                            <button onClick={()=> {\r\n                                this.create();\r\n                            }}><i className=\"fa fa-plus\"></i>添加\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"update\"\r\n                             style={this.state.curd.includes(\"u\") ? {marginLeft: \"20px\"} : {display: \"none\"}}>\r\n                            <button onClick={()=> {\r\n                                this.update();\r\n                            }}><i className=\"fa fa-edit\"></i>更改\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"refresh\"\r\n                             style={this.state.curd.includes(\"r\") ? {marginLeft: \"20px\"} : {display: \"none\"}}>\r\n                            <button className={this.state.loading ? \"loading\" : \"\"} onClick={()=> {\r\n                                this.refresh();\r\n                            }}><i className={this.state.loading ? \"fa fa-refresh loading\" : \"fa fa-refresh\"}></i>刷新\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"delete\"\r\n                             style={this.state.curd.includes(\"d\") ? {marginLeft: \"20px\"} : {display: \"none\"}}>\r\n                            <button onClick={()=> {\r\n                                this.delete();\r\n                            }}><i className=\"fa fa-times\"></i>删除\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"attachment\"\r\n                             style={this.props.attachment ? {marginLeft: \"20px\"} : {display: \"none\"}}>\r\n                            <button onClick={()=> {\r\n                                this.attachment();\r\n                            }}><i className=\"fa fa-paperclip\"></i>附件\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"select-filter\" style={this.state.columns.filter(d=> {\r\n                            return d.select;\r\n                        }).length > 0 ? {marginTop: \"20px\"} : {}}>\r\n                            {\r\n                                this.state.selectFilter.map((d, i)=> {\r\n                                    let select = <Select key={i} data={d.data} text={d.name}\r\n                                                         callback={(d1=> {\r\n                                                             this.rowFilterCallback(d.id, d1);\r\n                                                         })}\r\n                                                         optionNumPerColumn={5}/>;\r\n                                    return select;\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-body\">\r\n                        <table>\r\n                            <thead>\r\n                            <tr>\r\n                                <th className=\"checkbox\"\r\n                                    style={(this.state.curd.includes(\"u\") || this.state.curd.includes(\"d\")) ? {} : {display: \"none\"}}>\r\n                                    <input type=\"checkbox\" checked={this.state.rowAllChecked} onChange={()=> {\r\n                                        this.rowAllCheck();\r\n                                    }}/>\r\n                                </th>\r\n                                {\r\n                                    this.state.columns.map(d=> {\r\n                                        return <th key={d.id} onClick={()=> {\r\n                                            this.sort(d.id);\r\n                                        }} data-columnId={d.id} className={d.checked ? \"\" : \"hide\"}>{d.name}{\r\n                                            (this.state.sortColumnId == d.id) ? (\r\n                                                this.state.sortDesc ?\r\n                                                    <i className=\"fa fa-caret-up\"></i> :\r\n                                                    <i className=\"fa fa-caret-down\"></i>\r\n                                            ) : \"\"\r\n                                        }</th>\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.displayData.map((d, i)=> {\r\n                                    return <tr key={i}>\r\n                                        <td className=\"checkbox\"\r\n                                            style={(this.state.curd.includes(\"d\") || this.state.curd.includes(\"d\")) ? {} : {display: \"none\"}}>\r\n                                            <input checked={d.checkboxChecked} type=\"checkbox\" onChange={()=> {\r\n                                                this.rowCheck(d);\r\n                                            }}/></td>\r\n                                        {\r\n                                            this.state.columns.map(d1=> {\r\n                                                let tdHtml = d[d1.id];\r\n                                                if (tdHtml) {\r\n                                                    tdHtml = tdHtml.toString().replace(/\\n/g, \"<br/>\");\r\n                                                }\r\n                                                if (this.props[d1.id + \"TdCallback\"] != undefined) {\r\n                                                    return <td data={d[d1.id]} key={d1.id}\r\n                                                               data-columnId={d1.id}\r\n                                                               className={d1.checked ? \"\" : \"hide\"}\r\n                                                               onClick={()=> {\r\n                                                                   this.tdCallback(d1.id, d[d1.id])\r\n                                                               }}\r\n                                                               dangerouslySetInnerHTML={{__html: tdHtml}}></td>\r\n                                                } else {\r\n                                                    return <td data={d[d1.id]} key={d1.id}\r\n                                                               data-columnId={d1.id}\r\n                                                               className={d1.checked ? \"\" : \"hide\"}\r\n                                                               dangerouslySetInnerHTML={{__html: tdHtml}}></td>\r\n                                                }\r\n                                            })\r\n                                        }</tr>\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"panel-create\"\r\n                     style={this.state.panel == \"create\" ? {} : {display: \"none\"}}>\r\n                    <div className=\"panel-head\">\r\n                        <button className=\"backToMain\" onClick={()=> {\r\n                            this.backToMain();\r\n                        }}><i className=\"fa fa-arrow-left\"></i>返回表格主界面\r\n                        </button>\r\n                        <button className=\"submit\" onClick={()=> {\r\n                            this.createSubmit();\r\n                        }}><i className=\"fa fa-plus\"></i>提交\r\n                        </button>\r\n                    </div>\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            {\r\n                                this.state.columns.filter(d=> {\r\n                                    let filter = (d.id == \"id\");\r\n                                    return !filter;\r\n                                }).map(d=> {\r\n                                    return <th key={d.id}>{d.name}</th>;\r\n                                })\r\n                            }\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.state.createReferTableData.map((d, i)=> {\r\n                                return <tr key={i}>\r\n                                    {\r\n                                        this.state.columns.filter(d1=> {\r\n                                            let filter = (d1.id == \"id\");\r\n                                            return !filter;\r\n                                        }).map(d1=> {\r\n                                            let td = <td data-columnId={d1.id} key={d1.id} dangerouslySetInnerHTML={{__html:d[d1.id].toString().replace(/\\n/g, \"<br/>\")}}></td>;\r\n                                            return td;\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            })\r\n                        }\r\n                        {\r\n                            this.state.ct.map((d, i)=> {\r\n                                return <tr key={i}>\r\n                                    {\r\n                                        this.state.columns.filter(d1=> {\r\n                                            let filter = (d1.id == \"id\");\r\n                                            return !filter;\r\n                                        }).map(d1=> {\r\n                                            let td;\r\n                                            switch (d1.type) {\r\n                                                case \"textarea\":\r\n                                                    td = <textarea disabled={d1.createReadonly} value={d[d1.id]}\r\n                                                                   onChange={(e)=> {\r\n                                                                       this.createTdChange(e, i, d1.id);\r\n                                                                   }}/>;\r\n                                                    break;\r\n                                                case \"radio\":\r\n                                                    td = <select disabled={d1.createReadonly}\r\n                                                                 value={d[d1.id]}\r\n                                                                 onChange={(e)=> {\r\n                                                                     this.createTdChange(e, i, d1.id);\r\n                                                                 }}>\r\n                                                        <option></option>\r\n                                                        {d1.radioArr.map((d2, j)=> {\r\n                                                            return <option key={j}>{d2}</option>;\r\n                                                        })}</select>;\r\n                                                    break;\r\n                                                default:\r\n                                                    td = <input disabled={d1.createReadonly} value={d[d1.id]}\r\n                                                                onChange={(e)=> {\r\n                                                                    this.createTdChange(e, i, d1.id);\r\n                                                                }}/>;\r\n                                                    break;\r\n                                            }\r\n                                            td = <td key={d1.id}>{td}</td>;\r\n                                            return td;\r\n                                        })\r\n                                    }</tr>;\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"panel-update\" style={this.state.panel == \"update\" ? {} : {display: \"none\"}}>\r\n                    <div className=\"panel-head\">\r\n                        <button className=\"backToMain\" onClick={()=> {\r\n                            this.backToMain();\r\n                        }}><i className=\"fa fa-arrow-left\"></i>返回表格主界面\r\n                        </button>\r\n                        <button className=\"submit\" onClick={()=> {\r\n                            this.updateSubmit();\r\n                        }}><i className=\"fa fa-edit\"></i>提交\r\n                        </button>\r\n                    </div>\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            {\r\n                                this.state.columns.filter(d=> {\r\n                                    let filter = (d.id == \"id\");\r\n                                    return !filter;\r\n                                }).map(d=> {\r\n                                    return <th key={d.id}>{d.name}</th>;\r\n                                })\r\n                            }\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.state.ut.map((d, i)=> {\r\n                                return <tr key={i}>\r\n                                    {\r\n                                        this.state.columns.filter(d1=> {\r\n                                            let filter = (d1.id == \"id\");\r\n                                            return !filter;\r\n                                        }).map(d1=> {\r\n                                            let td;\r\n                                            switch (d1.type) {\r\n                                                case \"textarea\":\r\n                                                    td = <textarea disabled={d1.updateReadonly}\r\n                                                                   value={(this.state.ut.length == 0) ? \"\" : (this.state[\"ut\" + i + \"_\" + d1.id] == undefined) ? \"\" : this.state[\"ut\" + i + \"_\" + d1.id]}\r\n                                                                   onChange={(e)=> {\r\n                                                                       this.updateTdChange(e, i, d1.id);\r\n                                                                   }}/>;\r\n                                                    break;\r\n                                                case \"radio\":\r\n                                                    td = <select disabled={d1.updateReadonly}\r\n                                                                 value={(this.state.ut.length == 0) ? \"\" : (this.state[\"ut\" + i + \"_\" + d1.id] == undefined) ? \"\" : this.state[\"ut\" + i + \"_\" + d1.id]}\r\n                                                                 onChange={(e)=> {\r\n                                                                     this.updateTdChange(e, i, d1.id);\r\n                                                                 }}>\r\n                                                        {d1.radioArr.map((d2, j)=> {\r\n                                                            return <option key={j}>{d2}</option>;\r\n                                                        })}</select>;\r\n                                                    break;\r\n                                                default:\r\n                                                    td = <input disabled={d1.updateReadonly}\r\n                                                                value={(this.state.ut.length == 0) ? \"\" : (this.state[\"ut\" + i + \"_\" + d1.id] == undefined) ? \"\" : this.state[\"ut\" + i + \"_\" + d1.id]}\r\n                                                                onChange={(e)=> {\r\n                                                                    this.updateTdChange(e, i, d1.id);\r\n                                                                }}/>;\r\n                                                    break;\r\n                                            }\r\n                                            td = <td key={d1.id}>{td}</td>;\r\n                                            return td;\r\n                                        })\r\n                                    }</tr>;\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"panel-attachment\" style={this.state.panel == \"attachment\" ? {} : {display: \"none\"}}>\r\n                    <div className=\"panel-head\">\r\n                        <button className=\"backToMain\" onClick={()=> {\r\n                            this.backToMain();\r\n                        }}><i className=\"fa fa-arrow-left\"></i>返回表格主界面\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"upload\">\r\n                        <input type=\"file\" multiple=\"multiple\"/>\r\n                        <div className=\"progress\">{this.state.attachmentProgress}</div>\r\n                        <button onClick={(e)=> {\r\n                            this.uploadAttachment(e);\r\n                        }}>上传附件\r\n                        </button>\r\n                    </div>\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>附件名称</th>\r\n                            <th>删除</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            (this.state.attachmentList.length == 0) ?\r\n                                <tr>\r\n                                    <td colSpan=\"2\">no attachment</td>\r\n                                </tr> :\r\n                                this.state.attachmentList.map(d=> {\r\n                                    return <tr key={d}>\r\n                                        <td>{d}</td>\r\n                                        <td><i className=\"fa fa-times\" onClick={()=> {\r\n                                            this.deleteAttachment(d);\r\n                                        }}></i></td>\r\n                                    </tr>\r\n                                })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    columnFilterCallback(columns) {\r\n        this.setState({columns: columns});\r\n    }\r\n\r\n    rowFilterChange(e) {\r\n        let matchValue = e.target.value;\r\n        let filterData = this.state.sourceData.filter(d=> {\r\n            let isFind = false;\r\n            for (let k in d) {\r\n                if (d[k] != null && d[k].toString().toLowerCase().includes(matchValue.toLowerCase())) {\r\n                    isFind = true;\r\n                    break;\r\n                }\r\n            }\r\n            return isFind;\r\n        });\r\n        this.setState({\r\n            filterData: filterData,\r\n            displayData: filterData,\r\n            rowFilterValue: matchValue\r\n        });\r\n    }\r\n\r\n    rowFilterCallback(id, data) {\r\n        let checkedValues = data.filter(d=> {\r\n            return d.checked;\r\n        }).map(d=> {\r\n            return d.name;\r\n        });\r\n        let filterData = this.state.sourceData.filter(d=> {\r\n            let isFind = false;\r\n            checkedValues.forEach(d1=> {\r\n                if (d[id] != null && d[id].toString().toLowerCase() == d1.toString().toLowerCase()) {\r\n                    isFind = true;\r\n                }\r\n            });\r\n            return isFind;\r\n        });\r\n        this.state.selectFilter.filter(d=> {\r\n            return d.id != id;\r\n        }).map(d=> {\r\n            let checkedValues = d.data.filter(d1=> {\r\n                return d1.checked;\r\n            });\r\n\r\n            filterData = filterData.filter(d1=> {\r\n                let isFind = false;\r\n                checkedValues.forEach(d2=> {\r\n                    let tdValue = d1[d.id];\r\n                    let matchValue = d2.name.toString().toLowerCase();\r\n                    if (tdValue != null && tdValue.toString().toLowerCase() == matchValue) {\r\n                        isFind = true;\r\n                    }\r\n                });\r\n                return isFind;\r\n            })\r\n        });\r\n\r\n        this.setState({\r\n            filterData: filterData,\r\n            displayData: filterData\r\n        });\r\n    }\r\n\r\n    refresh() {\r\n        let tableId = this.props.tableId;\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        http.post(\"../table/\" + tableId + \"/read\").then(d=> {\r\n            d = d.map(d1=> {\r\n                d1.checkboxChecked = false;\r\n                return d1;\r\n            });\r\n            this.setState({\r\n                loading: false,\r\n                sourceData: d,\r\n                filterData: d,\r\n                displayData: d,\r\n                rowFilterValue: \"\",\r\n                rowAllCheck: false\r\n            });\r\n        }).catch(d=> {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n            alert(\"刷新数据失败:\" + d);\r\n        });\r\n    }\r\n\r\n    radioFilterChange(e, d) {\r\n        let filterData = (e.target.value == d.name) ? this.state.sourceData : this.state.sourceData.filter(d1=> {\r\n            d1 = d1[d.id];\r\n            d1 = (d1 == null) ? \"\" : d1.toString();\r\n            return d1 == e.target.value;\r\n        });\r\n        this.setState({\r\n            filterData: filterData,\r\n            displayData: filterData\r\n        });\r\n    }\r\n\r\n    tdCallback(id, value) {\r\n        this.props[id + \"TdCallback\"](value);\r\n    }\r\n\r\n    sort(id) {\r\n        let sortDesc = this.state.sortDesc;\r\n        if (this.state.sortColumnId == id) {\r\n            sortDesc = !sortDesc;\r\n        }\r\n        let sortedData = this.state.displayData.concat();\r\n        let regex = new RegExp(/^\\d{4}-\\d{2}-\\d{2}$/g);\r\n        if (sortDesc) {\r\n            sortedData.sort((a, b)=> {\r\n                let va, vb;\r\n                if (a[id] != null && b[id] != null && a[id].match(regex) != null && b[id].match(regex) != null) {\r\n                    va = a[id];\r\n                    vb = b[id];\r\n                } else if (!isNaN(parseFloat(a[id])) && !isNaN(parseFloat(b[id]))) {\r\n                    va = parseFloat(a[id]);\r\n                    vb = parseFloat(b[id]);\r\n                } else {\r\n                    va = (a[id] == null) ? \"\" : a[id];\r\n                    vb = (b[id] == null) ? \"\" : b[id];\r\n                }\r\n                return va > vb ? 1 : -1;\r\n            });\r\n        } else {\r\n            sortedData.sort((a, b)=> {\r\n                let va, vb;\r\n                if (a[id] != null && b[id] != null && a[id].match(regex) != null && b[id].match(regex) != null) {\r\n                    va = a[id];\r\n                    vb = b[id];\r\n                } else if (!isNaN(parseFloat(a[id])) && !isNaN(parseFloat(b[id]))) {\r\n                    va = parseFloat(a[id]);\r\n                    vb = parseFloat(b[id]);\r\n                } else {\r\n                    va = (a[id] == null) ? \"\" : a[id];\r\n                    vb = (b[id] == null) ? \"\" : b[id];\r\n                }\r\n                return va < vb ? 1 : -1;\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            sortColumnId: id,\r\n            sortDesc: sortDesc,\r\n            displayData: sortedData\r\n        });\r\n    }\r\n\r\n    rowAllCheck() {\r\n        let newData = this.state.displayData.map(d=> {\r\n            d.checkboxChecked = !this.state.rowAllChecked;\r\n            return d;\r\n        });\r\n        this.setState({\r\n            rowAllChecked: !this.state.rowAllChecked,\r\n            displayData: newData\r\n        });\r\n    }\r\n\r\n    rowCheck(d) {\r\n        let newData = this.state.displayData.map(d1=> {\r\n            if (d1 == d) {\r\n                d1.checkboxChecked = !d1.checkboxChecked;\r\n            }\r\n            return d1;\r\n        });\r\n        this.setState({\r\n            displayData: newData\r\n        });\r\n    }\r\n\r\n    backToMain() {\r\n        this.setState({\r\n            panel: \"main\"\r\n        });\r\n    }\r\n\r\n    create() {\r\n        let data = {panel: \"create\", createReferTableData: []};\r\n        if (this.props.createButtonCallback) {\r\n            let checkedData = this.state.displayData.filter(d=> {\r\n                return d.checkboxChecked;\r\n            });\r\n            if (checkedData.length != 0) {\r\n                this.props.createButtonCallback(checkedData).then(d=> {\r\n                    let defaultCreateValue = d.defaultData;\r\n                    if (d.hasOwnProperty(\"displayData\")) {\r\n                        data.createReferTableData = d.displayData;\r\n                    }\r\n\r\n                    let ct = defaultCreateValue.concat();\r\n                    for (let i = 0; i < this.state.createLineNum; i++) {\r\n                        if (defaultCreateValue[i]) {\r\n                            this.state.columns.forEach(d1=> {\r\n                                if (!defaultCreateValue[i].hasOwnProperty(d1.id)) {\r\n                                    ct[i][d1.id] = \"\";\r\n                                }\r\n                            });\r\n                        } else {\r\n                            let row = {};\r\n                            this.state.columns.forEach(d1=> {\r\n                                row[d1.id] = \"\";\r\n                            });\r\n                            ct.push(row);\r\n                        }\r\n                    }\r\n                    data.ct = ct;\r\n                    this.setState(data);\r\n                }).catch(d=> {\r\n                    this.setState(data);\r\n                });\r\n            } else {\r\n                this.setState(data);\r\n            }\r\n        } else {\r\n            this.setState(data);\r\n        }\r\n    }\r\n\r\n    createSubmit() {\r\n        let rows = this.state.ct.filter(d=> {\r\n            let isEmpty = true;\r\n            for (let k in d) {\r\n                if (d[k].trim() != \"\") {\r\n                    isEmpty = false;\r\n                    break;\r\n                }\r\n            }\r\n            return !isEmpty;\r\n        });\r\n        if (rows.length == 0) {\r\n            alert(\"请至少填写一行数据\");\r\n            return;\r\n        }\r\n        if (confirm(\"你确认要提交以下\" + rows.length + \"行数据吗?\")) {\r\n            let data = {requestRowsLength: rows.length};\r\n            this.state.columns.forEach(d=> {\r\n                let v = rows.map(d1=> {\r\n                    return d1[d.id];\r\n                });\r\n                data[d.id] = v;\r\n            });\r\n            let tableId = this.props.tableId;\r\n            http.post(\"../table/\" + tableId + \"/create\", data).then(d=> {\r\n                this.refresh();\r\n                alert(\"提交成功\");\r\n                this.setState({panel: \"main\"});\r\n            }).catch(d=> {\r\n                alert(\"提交失败:\" + d);\r\n            });\r\n        }\r\n    }\r\n\r\n    createTdChange(e, i, id) {\r\n        let ct = this.state.ct;\r\n        ct[i][id] = e.target.value;\r\n        this.setState({\r\n            ct: ct\r\n        });\r\n    }\r\n\r\n    update() {\r\n        let checkedData = this.state.displayData.filter(d=> {\r\n            return d.checkboxChecked;\r\n        });\r\n        if (checkedData.length == 0) {\r\n            alert(\"请至少选择一行数据\");\r\n            return;\r\n        }\r\n        let json = {\r\n            panel: \"update\",\r\n            ut: checkedData\r\n        };\r\n        checkedData.map((d, i)=> {\r\n            for (let k in d) {\r\n                json[\"ut\" + i + \"_\" + k] = d[k];\r\n            }\r\n        });\r\n        this.setState(json);\r\n    }\r\n\r\n    updateSubmit() {\r\n        let rows = this.state.ut;\r\n        if (confirm(\"你确认要提交以下\" + rows.length + \"行数据吗?\")) {\r\n            let data = {requestRowsLength: rows.length};\r\n            this.state.columns.forEach(d=> {\r\n                let v = [];\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    v.push(this.state[\"ut\" + i + \"_\" + d.id]);\r\n                }\r\n                data[d.id] = v;\r\n            });\r\n            let tableId = this.props.tableId;\r\n            http.post(\"../table/\" + tableId + \"/update\", data).then(d=> {\r\n                this.refresh();\r\n                alert(\"提交成功\");\r\n                this.setState({panel: \"main\"});\r\n            }).catch(d=> {\r\n                alert(\"提交失败:\" + d);\r\n            });\r\n        }\r\n    }\r\n\r\n    updateTdChange(e, i, id) {\r\n        let json = {};\r\n        json[\"ut\" + i + \"_\" + id] = e.target.value;\r\n        this.setState(json);\r\n    }\r\n\r\n    delete() {\r\n        let checkedData = this.state.displayData.filter(d=> {\r\n            return d.checkboxChecked;\r\n        });\r\n        if (checkedData.length == 0) {\r\n            alert(\"请至少选择一行数据\");\r\n            return;\r\n        }\r\n        let data = {\r\n            id: checkedData.map(d=> {\r\n                return d.id;\r\n            })\r\n        };\r\n        if (confirm(\"确定要删除以下勾选的\" + checkedData.length + \"行数据吗?\")) {\r\n            let tableId = this.props.tableId;\r\n            http.post(\"../table/\" + tableId + \"/delete\", data).then(d=> {\r\n                this.refresh();\r\n                alert(\"删除成功\");\r\n            }).catch(d=> {\r\n                alert(\"删除失败:\" + d);\r\n            });\r\n        }\r\n    }\r\n\r\n    attachment() {\r\n        let checkedData = this.state.displayData.filter(d=> {\r\n            return d.checkboxChecked;\r\n        });\r\n        if (checkedData.length != 1) {\r\n            alert(\"请选择一行数据\");\r\n            return;\r\n        }\r\n        let attachmentId = checkedData.map(d=> {\r\n            return d.id;\r\n        })[0];\r\n        this.setState({\r\n            panel: \"attachment\",\r\n            attachmentId: attachmentId\r\n        });\r\n        this.refreshAttachment(attachmentId);\r\n    }\r\n\r\n    refreshAttachment(id) {\r\n        let tableId = this.props.tableId;\r\n        http.post(\"../table/\" + tableId + \"/attachmentRead\", {id: id}).then(d=> {\r\n            this.setState({\r\n                panel: \"attachment\",\r\n                attachmentList: d\r\n            });\r\n        }).catch(d=> {\r\n            alert(\"获取附件列表失败:\" + d);\r\n        });\r\n    }\r\n\r\n    deleteAttachment(d) {\r\n        let id = this.state.attachmentId;\r\n        let tableId = this.props.tableId;\r\n        let data = {\r\n            id: id,\r\n            name: d\r\n        };\r\n        http.post(\"../table/\" + tableId + \"/attachmentDelete\", data).then(d1=> {\r\n            this.refreshAttachment(id);\r\n            alert(\"删除成功\");\r\n        }).catch(d1=> {\r\n            alert(\"删除失败:\" + d1);\r\n        })\r\n    }\r\n\r\n    uploadAttachment(e) {\r\n        let id = this.state.attachmentId;\r\n        let tableId = this.props.tableId;\r\n        upload.do(\"../table/\" + tableId + \"/attachmentUpload?id=\" + id, e.target.parentNode.childNodes[0], d=> {\r\n            this.setState({\r\n                attachmentProgress: d + \"%\"\r\n            });\r\n        }).then(d=> {\r\n            this.refreshAttachment(id);\r\n            alert(\"上传成功\");\r\n        }).catch(d=> {\r\n            alert(\"上传失败:\" + d);\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = table;"]}