{"version":3,"sources":["radio.jsx"],"names":[],"mappings":"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","file":"radio.js","sourcesContent":["let http = require(\"./http\");\r\nlet React = require(\"react\");\r\n\r\nclass radio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            panelShow: false,\r\n            sourceData: [],\r\n            value: \"\",\r\n            filterOptionData: [],\r\n            filterValue: \"\"\r\n        };\r\n        let bindArr = [\"radioBlur\", \"panelToggle\", \"filterChange\", \"filterBlur\", \"select\", \"setOptionHtml\", \"setFilterOptionData\"];\r\n        bindArr.forEach(d=> {\r\n            this[d] = this[d].bind(this);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.url != undefined) {\r\n            http.post(this.props.url).then(d=> {\r\n                let filterOptionData = this.setFilterOptionData(d);\r\n                this.setState({\r\n                    value: this.props.defaultBlank ? \"\" : d[0],\r\n                    sourceData: d,\r\n                    filterOptionData: filterOptionData\r\n                });\r\n            }).catch(d=> {\r\n                console.log(\"init radio failed:\" + d);\r\n            });\r\n\r\n        } else {\r\n            let data = this.props.data;\r\n            let filterOptionData = this.setFilterOptionData(data);\r\n            this.setState({\r\n                value: this.props.defaultBlank ? \"\" : data[0],\r\n                sourceData: data,\r\n                filterOptionData: filterOptionData,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"react-radio\" tabIndex=\"0\" onBlur={this.radioBlur}>\r\n                <div className=\"input\" onClick={this.panelToggle}>\r\n                    {this.state.value}<i className=\"fa fa-caret-down\"></i>\r\n                </div>\r\n                <div className=\"panel\" style={(this.state.panelShow) ? {} : {display: \"none\"}}>\r\n                    <div className=\"filter\">\r\n                        <i className=\"fa fa-search\"></i>\r\n                        <input onChange={this.filterChange} onBlur={this.filterBlur} value={this.state.filterValue}\r\n                               placeholder=\"filter\"/>\r\n                    </div>\r\n                    <div className=\"options\">\r\n                        {\r\n                            this.state.filterOptionData.map((d, i)=> {\r\n                                return <div key={i} className=\"column\">\r\n                                    {\r\n                                        d.map((d1, j)=> {\r\n                                            return <div className=\"option\" onClick={()=> {\r\n                                                this.select(d1)\r\n                                            }} key={j} dangerouslySetInnerHTML={this.setOptionHtml(d1)}></div>;\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    radioBlur(e) {\r\n        let panel = e.target.getElementsByClassName(\"panel\")[0];\r\n        if (panel == undefined) {\r\n            this.setState({\r\n                panelShow: false\r\n            });\r\n            return;\r\n        }\r\n        let selfInput = panel.getElementsByClassName(\"filter\")[0].getElementsByTagName(\"input\")[0];\r\n        if (e.relatedTarget != selfInput) {\r\n            this.setState({\r\n                panelShow: false\r\n            });\r\n        }\r\n    }\r\n\r\n    panelToggle() {\r\n        this.setState({\r\n            panelShow: !this.state.panelShow\r\n        });\r\n    }\r\n\r\n    filterChange(e) {\r\n        let filterOptionData = this.state.sourceData.filter(d=> {\r\n            return d.toString().includes(e.target.value);\r\n        });\r\n        filterOptionData = this.setFilterOptionData(filterOptionData);\r\n        this.setState({\r\n            filterValue: e.target.value,\r\n            filterOptionData: filterOptionData\r\n        });\r\n    }\r\n\r\n    filterBlur(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    select(d) {\r\n        this.setState({\r\n            panelShow: false,\r\n            value: d\r\n        });\r\n\r\n        if (this.props.selectCallback) {\r\n            this.props.selectCallback(d);\r\n        }\r\n    }\r\n\r\n    setOptionHtml(d) {\r\n        d = d.toString();\r\n        let v = this.state.filterValue;\r\n        let regex = new RegExp(v, \"g\");\r\n        if (v == \"\") {\r\n            return {__html: d};\r\n        } else {\r\n            let result = d.toString().replace(regex, ()=> {\r\n                return \"<strong>\" + v + \"</strong>\";\r\n            });\r\n            return {__html: result};\r\n        }\r\n    }\r\n\r\n    setFilterOptionData(d) {\r\n        let columnDataArr = [];\r\n        for (let i = 0; i < d.length; i = i + 10) {\r\n            let end = (i + 10) > d.length ? d.length : i + 10;\r\n            let columnData = d.slice(i, end);\r\n            columnDataArr.push(columnData);\r\n        }\r\n        return columnDataArr;\r\n    }\r\n\r\n\r\n}\r\n\r\nmodule.exports = radio;"]}