{"version":3,"sources":["route.es6"],"names":[],"mappings":"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","file":"route.js","sourcesContent":["let table = require(\"./table\");\r\nlet tableMap = require(\"./tableMap\");\r\nlet response = require(\"./response\");\r\nlet account = require(\"./account\");\r\n\r\nlet express = require('express');\r\nlet router = express.Router();\r\n\r\n//upload\r\nlet multer = require('multer');\r\nlet storage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, './server/upload/')\r\n    },\r\n    filename: function (req, file, cb) {\r\n        cb(null, file.originalname)\r\n    }\r\n});\r\nlet upload = multer({storage: storage});\r\n\r\n//default page\r\nrouter.route('/').get(function (req, res) {\r\n    res.redirect('/login/');\r\n});\r\n\r\n//account router\r\nrouter.route(\"/account/:action\").post((req, res, next)=> {\r\n    let action = req.params.action;\r\n    switch (action) {\r\n        case \"login\":\r\n            account.login(req, res);\r\n            break;\r\n        case \"logout\":\r\n            account.logout(req, res);\r\n            break;\r\n        case \"getCookieName\":\r\n            account.getCookieName(req, res);\r\n            break;\r\n        default:\r\n            response.fail(res, \"unknown action\");\r\n            break;\r\n    }\r\n});\r\n\r\n//table router\r\nrouter.route(\"/table/:name/:action\").post(upload.any(), (req, res, next)=> {\r\n    let action = req.params.action;\r\n    let name = req.params.name;\r\n    if (table[action] == undefined || tableMap[action] == undefined) {\r\n        console.log(\"unknown action:table/\" + name + \"/\" + action);\r\n        response.fail(res, \"unknown action\");\r\n    } else {\r\n        if (action == \"dataMap\") {\r\n            response.fail(res, \"unknown action\");\r\n        } else {\r\n            let map = tableMap[action](req, res, name);\r\n            table[action](req, res, name, map);\r\n        }\r\n    }\r\n});\r\n\r\n//controller router\r\nrouter.route(\"/controller/:name/:action\").post(upload.any(), (req, res, next)=> {\r\n    let action = req.params.action;\r\n    let name = req.params.name;\r\n    try {\r\n        let controller = require(\"./\"+name);\r\n        let func = controller[action];\r\n        if(func == undefined){\r\n            response.fail(res,\"action not found\");\r\n            return;\r\n        }\r\n        func(req,res);\r\n    } catch (e) {\r\n        if (e.code == \"MODULE_NOT_FOUND\") {\r\n             response.fail(res,\"controller not found\");\r\n        }else{\r\n\r\n        }\r\n    }\r\n});\r\n\r\nmodule.exports = router;\r\n"]}