{"version":3,"sources":["configInit.es6"],"names":[],"mappings":";;AAAA,IAAI,MAAM,QAAQ,UAAR,CAAV;;AAEA,IAAI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAIiB,IAAI,IAAJ,CAAS,6BAAT,CAJjB;;AAAA;AAIL,qDAJK;;AAKT,wDAAgB,cAAc,IAA9B;AACA,+CAAO,aAAP,GAAuB;AACnB,sDAAU,cAAc,QAAd,CAAuB,CAAvB,CADS;AAEnB,sDAAU,cAAc,QAAd,CAAuB,CAAvB,CAFS;AAGnB,4DAAgB,cAAc,cAAd,CAA6B,CAA7B,CAHG;AAInB,4DAAgB,cAAc,cAAd,CAA6B,CAA7B,CAJG;AAKnB,2DAAe,cAAc,aAAd,CAA4B,CAA5B;AALI,yCAAvB;;;AANS;AAAA,wEAee,IAAI,IAAJ,CAAS,2BAAT,CAff;;AAAA;AAeL,mDAfK;;AAgBT,sDAAc,YAAY,IAA1B;AACI,6CAjBK,GAiBG,QAAQ,kBAAR,CAjBH;;AAkBT,8CAAM,IAAN,CAAW,WAAX,EAAwB,YAAY,IAAZ,CAAiB,CAAjB,CAAxB,EAA6C,YAAY,QAAZ,CAAqB,CAArB,CAA7C,EAAsE,YAAY,QAAZ,CAAqB,CAArB,CAAtE;AACA,gDAAQ,GAAR,CAAY,oBAAZ;AACA,+CAAO,GAAP,CAAW,MAAX,CAAkB,IAAlB,CAAuB,oBAAvB;;;AApBS;AAAA,wEAuBc,MAAM,WAAN,CAAkB,aAAlB,CAvBd;;AAAA;AAuBL,kDAvBK;AAwBL,kDAxBK,GAwBQ,WAAW,GAAX,CAAe,aAAK;AACjC,gDAAI,kBAAJ;AACA,iDAAK,IAAI,CAAT,IAAc,CAAd,EAAiB;AACb,4DAAY,EAAE,CAAF,CAAZ;AACA;AACH;AACD,mDAAO,SAAP;AACH,yCAPgB,CAxBR;;;;AAkCT,+CAAO,QAAP,GAAkB,WAAW,GAAX,CAAe,iBAAM,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FACV,MAAM,WAAN,CAAkB,UAAU,CAA5B,CADU;;AAAA;AACzB,kEADyB;AAAA,6FAEtB,EAAC,IAAI,CAAL,EAAQ,QAAQ,MAAhB,EAFsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAf,CAAlB;;AAKA,gDAAQ,GAAR,CAAY,qCAAZ;AACA,+CAAO,GAAP,CAAW,MAAX,CAAkB,IAAlB,CAAuB,qCAAvB;;AAxCS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA0CT,4BAAQ,GAAR,CAAY,wBAAwB,aAAE,OAAtC;AACA,2BAAO,GAAP,CAAW,KAAX,CAAiB,IAAjB,CAAsB,wBAAwB,aAAE,OAAhD;;AA3CS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAiDA;;AAEA,OAAO,OAAP,GAAiB,EAAjB","file":"configInit.js","sourcesContent":["let xml = require(\"karl-xml\");\r\n\r\nlet loadConfig = async() => {\r\n    try {\r\n\r\n        //set global account\r\n        let accountConfig = await xml.read(\"./server/config/account.xml\");\r\n        accountConfig = accountConfig.root;\r\n        global.accountConfig = {\r\n            username: accountConfig.username[0],\r\n            password: accountConfig.password[0],\r\n            usernameCookie: accountConfig.usernameCookie[0],\r\n            passwordCookie: accountConfig.passwordCookie[0],\r\n            loginRedirect: accountConfig.loginRedirect[0]\r\n        };\r\n\r\n        //init mysql\r\n        let mysqlConfig = await xml.read(\"./server/config/mysql.xml\");\r\n        mysqlConfig = mysqlConfig.root;\r\n        let mysql = require(\"../../util/mysql\");\r\n        mysql.init(\"localhost\", mysqlConfig.user[0], mysqlConfig.password[0], mysqlConfig.database[0]);\r\n        console.log(\"mysql init success\");\r\n        global.log.server.info(\"mysql init success\");\r\n\r\n        //get all table names\r\n        let showTables = await mysql.excuteQuery(\"show tables\");\r\n        let tableNames = showTables.map(d => {\r\n            let tableName;\r\n            for (let k in d) {\r\n                tableName = d[k];\r\n                break;\r\n            }\r\n            return tableName;\r\n        });\r\n\r\n        //set global table struct\r\n        global.dbStruct = tableNames.map(async d=>{\r\n            let fields = await mysql.excuteQuery(\"desc \" + d);\r\n            return {id: d, fields: fields}\r\n        });\r\n\r\n        console.log(\"get database structure successfully\");\r\n        global.log.server.info(\"get database structure successfully\");\r\n    } catch (e) {\r\n        console.log(\"init config failed:\" + e.message);\r\n        global.log.error.info(\"init config failed:\" + e.message);\r\n    }\r\n\r\n\r\n};\r\n\r\nloadConfig();\r\n\r\nmodule.exports = \"\";"]}