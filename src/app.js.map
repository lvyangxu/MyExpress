{"version":3,"sources":["app.es6"],"names":[],"mappings":";;AAAA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,UAAU,QAAQ,eAAR,CAAd;;AAEA,IAAI,MAAM,SAAV;;;AAGA,QAAQ,QAAR;;;AAGA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,KAAK,IAAL,CAAU,SAAV,EAAqB,cAArB,CAAjB;AACA,IAAI,MAAJ,CAAW,MAAX,EAAmB,QAAQ,KAAR,EAAe,UAAlC;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;;AAGA,IAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,CAAf,CAAR;AACA,IAAI,GAAJ,CAAQ,GAAR,EAAa,QAAQ,MAAR,CAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,cAArB,CAAf,CAAb;;;AAGA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,GAAJ,CAAQ,OAAO,KAAP,CAAR;;;AAGA,IAAI,aAAa,QAAQ,aAAR,CAAjB;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAC,UAAU,KAAX,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,CAAgB,EAAC,MAAK,kBAAN,EAAhB,CAAR;;;AAGA,IAAI,eAAe,QAAQ,eAAR,CAAnB;AACA,IAAI,gBAAgB,QAAQ,gBAAR,CAApB;AACA,IAAI,GAAJ,CAAQ,cAAR;AACA,IAAI,GAAJ,CAAQ,cAAc;AAClB,UAAM,CAAC,UAAD,EAAa,UAAb;AADY,CAAd,CAAR;AAGA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAmB;AACvB,QAAI,aAAJ,GAAoB,aAApB;AACA;AACH,CAHD;;;AAMA,IAAI,UAAU,QAAQ,WAAR,CAAd;AACA,IAAI,GAAJ,CAAQ,OAAR;;;AAGA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AACA,IAAI,GAAJ,CAAQ,GAAR,EAAa,KAAb;;;AAGA,IAAI,GAAJ,CAAQ,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAC9B,QAAI,MAAM,IAAI,KAAJ,CAAU,WAAV,CAAV;AACA,QAAI,MAAJ,GAAa,GAAb;AACA,SAAK,GAAL;AACH,CAJD;;;;AAQA,IAAI,GAAJ,CAAQ,UAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,IAAzB,EAA+B;AACnC,QAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,YAAQ,GAAR,CAAY,eAAZ;AACA,YAAQ,GAAR,CAAY,GAAZ;AACA,QAAI,MAAJ,CAAW,QAAX;AACH,CALD;;AAQA,OAAO,OAAP,GAAiB,GAAjB","file":"app.js","sourcesContent":["let express = require('express');\nlet path = require('path');\nlet favicon = require('serve-favicon');\n// require('babel-polyfill');\nlet app = express();\n\n//my init\nrequire(\"./init\");\n\n// view engine setup\napp.set('views', path.join(__dirname, \"../../client\"));\napp.engine('html', require('ejs').renderFile);\napp.set('view engine', 'html');\n\n//static folder\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(\"/\", express.static(path.join(__dirname, \"../../client\")));\n\n//log morgan for http request console\nlet morgan = require('morgan');\napp.use(morgan('dev'));\n\n//body parser\nlet bodyParser = require('body-parser');\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(bodyParser.json({type:\"application/json\"}));\n\n//cookie and session\nlet cookieParser = require('cookie-parser');\nlet cookieSession = require('cookie-session');\napp.use(cookieParser());\napp.use(cookieSession({\n    keys: [\"username\", \"password\"]\n}));\napp.use((req, res, next)=> {\n    req.cookieSession = cookieSession;\n    next();\n});\n\n//session check\nlet session = require(\"./session\");\napp.use(session);\n\n//route\nlet route = require(\"./route\");\napp.use(\"/\", route);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\n// error handlers\n// no stacktraces leaked to user\napp.use(function (err, req, res, next) {\n    res.status(err.status || 500);\n    console.log(\"server error:\");\n    console.log(err);\n    res.render('error/');\n});\n\n\nmodule.exports = app;\n"]}